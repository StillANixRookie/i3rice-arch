#!/bin/bash

# OA: Gavin Vales
# CREATED: Sat  6 Jul 00:50:41 BST 2019

# COMMAND TO UPDATE BLUR OF BLURS
# for i in $(ls); do convert "${i}" -blur $blr "${PWD/normal/blur}/${i}"; echo "$i"; done

[[ -f $HOME/.config/user-dirs.dirs ]] && source $HOME/.config/user-dirs.dirs \
	&& WDIR="$XDG_PICTURES_DIR/i3wallpaper"
NORM="${WDIR}/normal"
BLUR="${WDIR}/blur"
COLS="${WDIR}/cols"
[[ -d $WDIR ]] || {
	mkdir $WDIR && \
	mkdir $NORM && \
	mkdir $BLUR && \
	mkdir $COLS
}
NWFD="$NORM"
CURR="${WDIR}/current"
WHT="${WDIR}/white.jpg"
CRLN="$(readlink -f $CURR)"
HIST="${WDIR}/.history"
MONDIM=$(xdpyinfo | grep dimensions: | awk '{print $2}')
MX=${MONDIM%x*}
MY=${MONDIM#*x}
blr=0x16

add-wall () {
	SRC="$1"
	TRG="${1##*/}"
	TRG="${TRG%.*}"
	TRG="${TRG/1920x1080/}"
	TRG="${TRG/,/}"
	TRG="${TRG/,/}"
	TRG="${TRG/,/}"
	TRG="${TRG/ /}"
	TRG="${TRG/ /}"
	TRG="${TRG/ /}"
	TRG="${TRG/ /}"
	TRG="${TRG/ /}"
	echo "
	TRG=$TRG
	SRC=$SRC"
	convert "${SRC}" -resize "${MX}x${MY}^" -gravity center -extent "${MX}x${MY}" "${NORM}/${TRG}"
	convert "${NORM}/${TRG}" -blur $blr "${BLUR}/${TRG}"
	WPP="$TRG"
}

add () {
	[[ -d $1 ]] || {
		echo "Directory doesn't exist."
		exit
		}
	cd "$1"
	count=0
	total=$(ls | wc -l)
	echo -ne "Adding...\n"
	IFS=$'\n'
	for i in $(find -type f); do
		count=$((count + 1))
		SRC="$i"
		SRC="${SRC#*/}"
		TRG="${i#*/}"
		TRG="${TRG%.*}"
		TRG="${TRG/1920x1080/}"
		TRG="${TRG/,/}"
		TRG="${TRG/,/}"
		TRG="${TRG/,/}"
		TRG="${TRG/ /}"
		TRG="${TRG/ /}"
		TRG="${TRG/ /}"
		TRG="${TRG/ /}"
		TRG="${TRG/ /}"
		echo -ne "\r${count}/${total} $TRG\r"
		[[ ! -f ${NORM}/${TRG} ]] && convert "${SRC}" \
			-resize "${MX}x${MY}^" \
			-gravity center \
			-extent "${MX}x${MY}" "${NORM}/${TRG}"
		[[ ! -f ${BLUR}/${TRG} ]] && convert "${NORM}/${TRG}" \
			-blur $blr "${BLUR}/${TRG}"
	done
}

tint () {
	CRTNT="${NORM}/${CRLN##*/}-${TNT/\#/}"
	[[ -f $CRTNT ]] || {
		convert "$CURR" -fill "${TNT}" -tint 100 "$CRTNT"
		convert "${CRTNT}" -blur 0x4 "${CRTNT/normal/blur}"
		}
	ln -sf "$CRTNT" $CURR
	CRLN=$(readlink -f $CURR)
}

colour () {
	[[ ! -f ${COLS}/${WPP/\#/} ]] && \
		convert $WHT -fill $WPP \
		-draw 'color 0,0 replace' "${COLS}/${WPP/\#/}"
	ln -sf "${COLS}/${WPP/\#/}" $CURR
	set-wall
}

change-current () {
	ln -sf "${NWFD}/${WPP}" $CURR
	CRLN="$(readlink -f $CURR)"
}

set-wall () {
	feh --bg-center $CURR
	polybar-msg hook i3wallpaper 1
	echo "${CRLN##*/}"
}

list () {
	cd $NORM
	$HOME/scr/openimage "$(ls | head -n 1)"
}

history () {
	[[ ! -f $HIST ]] && touch $HIST
	sed -e "/"${1}"/d" -i $HIST
	echo -e "${1}\n$(cat $HIST)" > $HIST
	echo "Added current wall to history"
}

delete () {
	[[ -n ${1} ]] && DEL="${1}" || DEL="${CRLN##*/}"
	rm -rf ${NORM}/${DEL}
	rm -rf ${BLUR}/${DEL}
	[[ ! -f ${NORM}/${DEL} ]] && echo "Deleted ${NORM}/${DEL}"
	[[ ! -f ${BLUR}/${DEL} ]] && echo "Deleted ${BLUR}/${DEL}"
}

rename () {
	NWNM="$1"
	[[ -n $1 ]] && {
#		notify-send $1
		cd $NORM && mv "${CRLN##*/}" "${1}"
		cd $BLUR && mv "${CRLN##*/}" "${1}"
		}
}

help () {
cat << 'EOB'
  ██ ██████                       ██  ██
 ▒▒ ▒█▒▒▒▒█                      ▒██ ▒██
  ██▒    ▒█ ███     ██  ██████   ▒██ ▒██
 ▒██   ████▒▒██  █ ▒██ ▒▒▒▒▒▒██  ▒██ ▒██
 ▒██  ▒▒▒▒█ ▒██ ███▒██  ███████  ▒██ ▒██  ████████
 ▒██ █   ▒█ ▒████▒████ ██▒▒▒▒██  ▒██ ▒██ ▒▒▒▒▒▒▒▒
 ▒██▒██████ ███▒ ▒▒▒██▒▒████████ ███ ███
 ▒▒ ▒▒▒▒▒▒ ▒▒▒    ▒▒▒  ▒▒▒▒▒▒▒▒ ▒▒▒ ▒▒▒

         ██████            ██████
        ▒██▒▒▒██  ██████  ▒██▒▒▒██  █████  ██████
        ▒██  ▒██ ▒▒▒▒▒▒██ ▒██  ▒██ ██▒▒▒██▒▒██▒▒█
        ▒██████   ███████ ▒██████ ▒███████ ▒██ ▒
        ▒██▒▒▒   ██▒▒▒▒██ ▒██▒▒▒  ▒██▒▒▒▒  ▒██
        ▒██     ▒▒████████▒██     ▒▒██████▒███
        ▒▒       ▒▒▒▒▒▒▒▒ ▒▒       ▒▒▒▒▒▒ ▒▒▒
 	-- A script to set wallpaper, with other features.

 Usage
 -----
 i3wallpaper                ┼ Create default directories:
                            │   WALL_DIR/(normal|blur|cols)
 i3wallpaper -h             ┼ Print this help
 i3wallpaper -w [PATH|PREV| ┼ Wallpaper to set 
                NEXT|RANDOM │
                  |NAME]    │
 i3wallpaper -t [HEX COLOR] ┼ Tint color of wallpaper
 i3wallpaper -a [DIRECTORY] ┼ Add walls from DIRECTORY
 i3wallpaper -l             ┼ List available wallpapers
 i3wallpaper -b             ┼ Toggle blur
 i3wallpaper -r [NAME]      ┼ Rename current wallpaper
 i3wallpaper -d             ┼ Remove wallpaper from
                            │   WALL_DIR/(normal|blur)
 
 WALL_DIR  ┼ Default i3wallpaper folder:
           │   $XDG_PICTURES_DIR/i3wallpaper
 DIRECTORY ┼ is a path to a directory containing pictures
 HEX COLOR ┼ Hexadecimal color Eg. #002b36
 PATH      ┼ is a path to a picture
 PREV      ┼ previous wallpaper in history
 NEXT      ┼ next wallpaper in history
 NAME      ┼ name of wallpaper stored in WALL_DIR/normal
 RANDOM    ┼ random wallpaper in WALL_DIR/normal

EOB
}

while getopts :w:t:a:d:r:lbh opts; do
	case $opts in
		w) WPP="${OPTARG}" WPPACTUAL="${OPTARG}" ;;
		t) TNT="${OPTARG}"             ;;
		a) add "${OPTARG}" && exit     ;;
		d) delete "${OPTARG}" && exit  ;;
		r) rename "${OPTARG}" && exit  ;;
		l) list && exit                ;;
		b) BLURT=TRUE                  ;;
		h) help && exit                ;;
	esac
done

if [[ -n $WPP ]]; then
	[[ $WPP =~ "#" ]]      && echo "Background colour is" && colour && exit
	[[ $WPP == "RANDOM" ]] && echo "Random wallpaper is"  && WPP=$(ls $NORM | shuf -n 1)
	[[ $WPP == "PREV" ]] && {
		echo "Previous wallpaper is"
		WPP="$(sed -n "/"${CRLN##*/}"/{g;1!p;};h" $HIST)"
		[[ -z $WPP ]] && WPP="$(tail -n 1 $HIST)"
		}
	[[ $WPP == "NEXT" ]] && {
		echo "Next wallpaper is" 
		WPP="$(sed -n "/"${CRLN##*/}"/{n;p;}" $HIST)"
		[[ -z $WPP ]] && WPP="$(head -n 1 $HIST)"
		}
	[[ ! -f $NORM/$WPP ]] \
		&& echo "${WPP##*/} not in walls directory, adding ${WPP##*/}" && add-wall "$WPP"
	change-current
	[[ ! -f "$WPP" ]] && help \
		&& echo "Wallpaper doesn't exist"
fi

[[ $BLURT == "TRUE" ]] && {
	CRFD=${CRLN%/*}
	CRFD=${CRFD##*/}
	[[ ${CRFD} == "normal" ]] \
		&& ln -sf  ${CRLN/\/normal\//\/blur\/} $CURR && NWFD="$BLUR" \
		|| ln -sf  ${CRLN/\/blur\//\/normal\/} $CURR
	echo "Blur toggled."
}

[[ -n $TNT ]] && echo "Tint colour = $TNT" && tint
set-wall
if [[ $WPPACTUAL == "NEXT" ]]; then
	:
elif [[ $WPPACTUAL == "PREV" ]]; then
	:
else
	history ${CRLN##*/}
fi
