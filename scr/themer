#!/bin/bash

# OA: Gavin Vales
# CREATED: Tue  7 May 23:07:28 GMT 2019

colsDir=$HOME/themes
defaultThm=${colsDir}/gruvbox_light
dir="$HOME/numix-solarized-gtk-theme"
#vrt="$(sed '2q;d' ${colsDir}/.current | awk '{print $2}')"
vrt="light"
scr="post-build-apply"

updatelist () {
	cd ${colsDir}
	bash .themelist
}

list () {
	ls ${colsDir} | grep -v '^total' | awk '{print $NF}'
}

guiapply () {
	theme=$(cat ${colsDir}/.theme_list | $HOME/scr/i3menu -p \
		"Choose theme " -w 350 | awk '{print $NF}')
#	echo $theme
	cd ${colsDir}
	if [[ -z ${theme} ]]; then
		notify-send "No theme chosen" -i "~/scrpic/theme.png"
		:
	elif [[ ! -f ${colsDir}/${theme} ]]; then
		notify-send "Theme don't exist" -i "~/scrpic/theme.png"
		:
	else
		notify-send "Theme exists" -i "~/scrpic/themepic.png"
		finaltheme=${theme}
		cat ${finaltheme} > .current
	fi
}

main () {
	nme=$(cat ${colsDir}/.current | grep '^name'       | awk '{print $NF}')
	wpr=$(cat ${colsDir}/.current | sed "/wallpaper/!d")
	wpr=/${wpr#*/}
	fnt=$(cat ${colsDir}/.current | grep '^font'       | awk '{print $NF}')
	gft=$(cat ${colsDir}/.current | grep '^guifont'    | awk '{print $NF}')
	sze=$(cat ${colsDir}/.current | grep '^size'       | awk '{print $NF}')
	bg0=$(cat ${colsDir}/.current | grep '^background' | awk '{print $NF}')
	acc=$(cat ${colsDir}/.current | grep '^accent'     | awk '{print $NF}')
	com=$(cat ${colsDir}/.current | grep '^comment'    | awk '{print $NF}')
	fg0=$(cat ${colsDir}/.current | grep '^foreground' | awk '{print $NF}')
	grn=$(cat ${colsDir}/.current | grep '^green'      | awk '{print $NF}')
	ylw=$(cat ${colsDir}/.current | grep '^yellow'     | awk '{print $NF}')
	red=$(cat ${colsDir}/.current | grep '^red'        | awk '{print $NF}')
	blu=$(cat ${colsDir}/.current | grep '^blue'       | awk '{print $NF}')
	gnt=$(cat ${colsDir}/.current | grep '^magenta'    | awk '{print $NF}')
	cyn=$(cat ${colsDir}/.current | grep '^cyan'       | awk '{print $NF}')

	[[ -z $nme ]] && nme=$(cat ${defaultThm} | grep '^name'      | awk '{print $NF}')
	[[ -z $fnt ]] && fnt=$(cat ${defaultThm} | grep '^font'      | awk '{print $NF}')
	[[ -z $gft ]] && gft=$(cat ${defaultThm} | grep '^guifont'   | awk '{print $NF}')
	[[ -z $sze ]] && sze=$(cat ${defaultThm} | grep '^size'      | awk '{print $NF}')
	[[ -z $grn ]] && grn=$(cat ${defaultThm} | grep '^green'     | awk '{print $NF}')
	[[ -z $ylw ]] && ylw=$(cat ${defaultThm} | grep '^yellow'    | awk '{print $NF}')
	[[ -z $red ]] && red=$(cat ${defaultThm} | grep '^red'       | awk '{print $NF}')
	[[ -z $blu ]] && blu=$acc
	[[ -z $gnt ]] && gnt=$(cat ${defaultThm} | grep '^magenta'   | awk '{print $NF}')
	[[ -z $cyn ]] && cyn=$(cat ${defaultThm} | grep '^cyan'      | awk '{print $NF}')
                                                                
	if [[ $wpr == "/" ]]; then
		hsetroot -solid "$acc" &
	else
		rm -f "$HOME/.config/wall.png"
		cp "${wpr}" "$HOME/.config/wall.png"
		feh --bg-scale "${wpr}"
	fi

	# convert to RGB
	comR=$((16#${com:1:-4})) && comG=$((16#${com:3:-2})) && comB=$((16#${com:5}))
	accR=$((16#${acc:1:-4})) && accG=$((16#${acc:3:-2})) && accB=$((16#${acc:5}))
	fg0R=$((16#${fg0:1:-4})) && fg0G=$((16#${fg0:3:-2})) && fg0B=$((16#${fg0:5}))
	bg0R=$((16#${bg0:1:-4})) && bg0G=$((16#${bg0:3:-2})) && bg0B=$((16#${bg0:5}))
	redR=$((16#${red:1:-4})) && redG=$((16#${red:3:-2})) && redB=$((16#${red:5}))
	ylwR=$((16#${ylw:1:-4})) && ylwG=$((16#${ylw:3:-2})) && ylwB=$((16#${ylw:5}))
	bluR=$((16#${blu:1:-4})) && bluG=$((16#${blu:3:-2})) && bluB=$((16#${blu:5}))
	grnR=$((16#${grn:1:-4})) && grnG=$((16#${grn:3:-2})) && grnB=$((16#${grn:5}))
	cynR=$((16#${cyn:1:-4})) && cynG=$((16#${cyn:3:-2})) && cynB=$((16#${cyn:5}))
	gntR=$((16#${gnt:1:-4})) && gntG=$((16#${gnt:3:-2})) && gntB=$((16#${gnt:5}))

	[[ $bg0R -le 127 ]] || [[ $bg0G -le 127 ]] || [[ $bg0B -le 127 ]] && \
		vrt=dark && echo "theme is $vrt"

	if [[ $vrt == "light" ]]; then
		fg1R=$(expr ${fg0R} + 20) && fg1G=$(expr ${fg0G} + 20) && fg1B=$(expr ${fg0B} + 20)
		fg2R=$(expr ${fg0R} + 40) && fg2G=$(expr ${fg0G} + 40) && fg2B=$(expr ${fg0B} + 40)
		fg3R=$(expr ${fg0R} + 60) && fg3G=$(expr ${fg0G} + 60) && fg3B=$(expr ${fg0B} + 60)
		bg1R=$(expr ${bg0R} - 20) && bg1G=$(expr ${bg0G} - 20) && bg1B=$(expr ${bg0B} - 20)
		bg2R=$(expr ${bg0R} - 40) && bg2G=$(expr ${bg0G} - 40) && bg2B=$(expr ${bg0B} - 40)
		bg3R=$(expr ${bg0R} - 60) && bg3G=$(expr ${bg0G} - 60) && bg3B=$(expr ${bg0B} - 60)
	else
		fg1R=$(expr ${fg0R} - 20) && fg1G=$(expr ${fg0G} - 20) && fg1B=$(expr ${fg0B} - 20)
		fg2R=$(expr ${fg0R} - 40) && fg2G=$(expr ${fg0G} - 40) && fg2B=$(expr ${fg0B} - 40)
		fg3R=$(expr ${fg0R} - 60) && fg3G=$(expr ${fg0G} - 60) && fg3B=$(expr ${fg0B} - 60)
		bg1R=$(expr ${bg0R} + 20) && bg1G=$(expr ${bg0G} + 20) && bg1B=$(expr ${bg0B} + 20)
		bg2R=$(expr ${bg0R} + 40) && bg2G=$(expr ${bg0G} + 40) && bg2B=$(expr ${bg0B} + 40)
		bg3R=$(expr ${bg0R} + 60) && bg3G=$(expr ${bg0G} + 60) && bg3B=$(expr ${bg0B} + 60)
	fi

	comRGB="${comR}, ${comG}, ${comB}"
	accRGB="${accR}, ${accG}, ${accB}"
	fg1RGB="${fg1R}, ${fg1G}, ${fg1B}"
	fg2RGB="${fg2R}, ${fg2G}, ${fg2B}"
	fg3RGB="${fg3R}, ${fg3G}, ${fg3B}"
	fg0RGB="${fg0R}, ${fg0G}, ${fg0B}"
	bg0RGB="${bg0R}, ${bg0G}, ${bg0B}"
	bg1RGB="${bg1R}, ${bg1G}, ${bg1B}"
	bg2RGB="${bg2R}, ${bg2G}, ${bg2B}"
	bg3RGB="${bg3R}, ${bg3G}, ${bg3B}"
	grnRGB="${grnR}, ${grnG}, ${grnB}"
	ylwRGB="${ylwR}, ${ylwG}, ${ylwB}"
	redRGB="${redR}, ${redG}, ${redB}"
	bluRGB="${bluR}, ${bluG}, ${bluB}"
	gntRGB="${gntR}, ${gntG}, ${gntB}"
	cynRGB="${cynR}, ${cynG}, ${cynB}"

	# variations of fg and bg colors in hex
	fg1RX=$(printf '%x\n' ${fg1R}) && fg1GX=$(printf '%x\n' ${fg1G}) && fg1BX=$(printf '%x\n' ${fg1B})
	fg2RX=$(printf '%x\n' ${fg2R}) && fg2GX=$(printf '%x\n' ${fg2G}) && fg2BX=$(printf '%x\n' ${fg2B})
	fg3RX=$(printf '%x\n' ${fg3R}) && fg3GX=$(printf '%x\n' ${fg3G}) && fg3BX=$(printf '%x\n' ${fg3B})
	bg1RX=$(printf '%x\n' ${bg1R}) && bg1GX=$(printf '%x\n' ${bg1G}) && bg1BX=$(printf '%x\n' ${bg1B})
	bg2RX=$(printf '%x\n' ${bg2R}) && bg2GX=$(printf '%x\n' ${bg2G}) && bg2BX=$(printf '%x\n' ${bg2B})
	bg3RX=$(printf '%x\n' ${bg3R}) && bg3GX=$(printf '%x\n' ${bg3G}) && bg3BX=$(printf '%x\n' ${bg3B})

	fg1="#${fg1RX}${fg1GX}${fg1BX}"
	fg2="#${fg2RX}${fg2GX}${fg2BX}"
	fg3="#${fg3RX}${fg3GX}${fg3BX}"
	bg1="#${bg1RX}${bg1GX}${bg1BX}"
	bg2="#${bg2RX}${bg2GX}${bg2BX}"
	bg3="#${bg3RX}${bg3GX}${bg3BX}"

	[[ ${#com} == 0 ]] && com=$fg3 && comRGB=$fg3RGB
	[[ ${#com} -gt 7 ]] && com=$fg3 && comRGB=$fg3RGB
#[[ ${#com} -gt 6 ]] || 
#	echo $nme
#	echo $wpr
#	echo $fnt
#	echo $gft
#	echo $sze
#	echo $fg0
#	echo $bg0
#	echo $acc
	echo $com
#	echo $fg1
#	echo $fg2
#	echo $fg3
#	echo $bg1
#	echo $bg2
#	echo $bg3
#	echo $grn
#	echo $ylw
#	echo $red
#	echo $blu
#	echo $gnt
#	echo $cyn

	regex="s/\%\%name\%\%/"${nme}"/g;s/\%\%guifont\%\%/"${gft}"/g;\
s/\%\%font\%\%/"${fnt}"/g;s/\%\%fontsize\%\%/"${sze}"/g;\
s/\%\%bg0\%\%/"${bg0}"/g;s/\%\%fg0\%\%/"${fg0}"/g;\
s/\%\%com\%\%/"${com}"/g;s/\%\%acc\%\%/"${acc}"/g;\
s/\%\%grn\%\%/"${grn}"/g;s/\%\%ylw\%\%/"${ylw}"/g;s/\%\%red\%\%/"${red}"/g;\
s/\%\%blu\%\%/"${blu}"/g;s/\%\%gnt\%\%/"${gnt}"/g;s/\%\%cyn\%\%/"${cyn}"/g;\
s/\%\%fg1\%\%/"${fg1}"/g;s/\%\%fg2\%\%/"${fg2}"/g;s/\%\%fg3\%\%/"${fg3}"/g;\
s/\%\%bg1\%\%/"${bg1}"/g;s/\%\%bg2\%\%/"${bg2}"/g;s/\%\%bg3\%\%/"${bg3}"/g;\
s/\%\%cynRGB\%\%/"${cynRGB}"/g;s/\%\%gntRGB\%\%/"${gntRGB}"/g;\
s/\%\%bluRGB\%\%/"${bluRGB}"/g;s/\%\%redRGB\%\%/"${redRGB}"/g;\
s/\%\%ylwRGB\%\%/"${ylwRGB}"/g;s/\%\%grnRGB\%\%/"${grnRGB}"/g;\
s/\%\%fg0RGB\%\%/"${fg0RGB}"/g;s/\%\%bg0RGB\%\%/"${bg0RGB}"/g;\
s/\%\%comRGB\%\%/"${comRGB}"/g;s/\%\%accRGB\%\%/"${accRGB}"/g;\
s/\%\%fg1RGB\%\%/"${fg1RGB}"/g;s/\%\%fg2RGB\%\%/"${fg2RGB}"/g;\
s/\%\%fg3RGB\%\%/"${fg3RGB}"/g;s/\%\%bg1RGB\%\%/"${bg1RGB}"/g;\
s/\%\%bg2RGB\%\%/"${bg2RGB}"/g;s/\%\%bg3RGB\%\%/"${bg3RGB}"/g"

	cd ${dir} || exit 1
	templates=$(ls -al | awk '{print $NF}' | grep '_template')
	for i in ${templates}; do
		cat ${i} | sed -e "${regex}" > ${i/_template/}
	done
	bash $scr
	cd $HOME
}

help () {
	echo "Script to make any config use terminal colours"
	echo ""
	echo "		Options"
	echo ""
	echo "-h --> display help"
	echo ""
	echo "-u --> update theme list for -a"
	echo ""
	echo "-a --> change current theme (.current located in theme directory)"
	echo ""
	echo "-c --> terminal version of -a"
	echo ""
	echo "-g --> apply current theme using _templates"
	echo ""
	echo "-l --> list available themes in theme directory"
	echo ""
	echo "-t --> full path to target folder, optional,"
	echo "			DEFAULT = \$HOME/numix-solarized-gtk-theme"
	echo "-x --> bash script to run after theme is made"
	echo "			DEFAULT = post-build-apply"
	echo "	-t and -x used in conjunction with -g"
	echo ""
	echo "To make theme template, just cd into the theme's main dir, duplicate the"
	echo "file(s) with the colors, rename with \"_template\" ending, replace"
	echo "colours with:"
	echo "		%%bg0%% == background"
	echo "		%%acc%% == accent"
	echo "		%%com%% == comment"
	echo "		%%fg0%% == foreground"
	echo "		%%grn%% == green"
	echo "		%%ylw%% == yellow"
	echo "		%%red%% == red"
	echo "		%%blu%% == blue"
	echo "		%%gnt%% == magenta"
	echo "		%%cyn%% == cyan"
	echo "	add RGB after colour name to get RGB in "R, G, B" form"
	echo "		eg. %%bg0RGB%%"
	echo "and run this script in the theme's main directory, and any other"
	echo "commands that you need to run"
}

while getopts :t:x:c:galuh opts; do
	case "$opts" in
		t)
			dir="${OPTARG}"
#			echo $dir
			;;
		x)
			scr="${OPTARG}"
#			echo $scr
			;;
		c)
			theme=${OPTARG}
			if [[ -z ${theme} ]]; then
				echo "No theme chosen"
				:
			elif [[ ! -f ${colsDir}/${theme} ]]; then
				echo "Theme don't exist"
				:
			else
				echo "Theme exists"
				cat ${colsDir}/${theme} > .current
			fi
			exit
			;;
		g)
			main
			exit
			;;
		a)
			guiapply
			exit
			;;
		l)
			list && exit
			;;
		u)
			updatelist && exit
			;;
		h)
			help && exit
			;;
	esac
done
