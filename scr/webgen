#!/usr/bin/env bash

WBST="$HOME/git/website"
DMN="https://gavales.github.io"

PNDCMD="pandoc -F pandoc-crossref -s --toc -o"
ROOT="file://$WBST"
RTLC="${ROOT}/local"

help() {
cat << 'EOB'
# NAME

__webgen__ - manage a static website,
               using `pandoc` + `markdown`

# DEPENDENCIES

```
pandoc
```

# SYNOPSIS

```
webgen --gensite|-g|--pushsite|-s
webgen --newpage|-n|--newpost|-p <name>
webgen --help|-h
```

# OPTIONS

`--gensite|-g`  
Generates website in `local/` folder.  
The links will still be local so you can still
view your changes locally.

`--pushsite|-s`  
Runs `.webgen` script to upload the site to
wherever you want. Put anything you want in the script

`--newpage|-n <name>`  
Create a new page

`--newpost|-p <name>`  
Create a new blog post

`--help`  
Displays this help

EOB
exit
}

cssprint()    {
	PGPT="pagepost"
	ls $WBST/css/*.css | sed "/${PGPT/$1/}/d;s/^.*css\///g;s/\.css$//g" | \
	awk -v ROOT="$WBST" '
	BEGIN {
		print "  <link rel=\"stylesheet\" href=\"file://" ROOT "/css/print.css\" media=\"print\"/>"
	}
	!/print/ {
		print "  <link rel=\"stylesheet\" href=\"file://" ROOT "/css/" $0 ".css\"/>"
	}
	'
}
jsonprint()   {
cat << 'EOB'

  <script>
  var prevScrollpos = window.pageYOffset;
  window.onscroll = function() {
  var currentScrollPos = window.pageYOffset;
  	if (prevScrollpos > currentScrollPos) {
  		document.getElementById("TOC").style.left = "0";
  	}
  	else {
  		document.getElementById("TOC").style.left = "-250px";
  	}
  	prevScrollpos = currentScrollPos;
  }
  </script>

EOB
}
navgen()      {
	ls pages/*.html | \
		sed '/_pre\.html/d;s/^pages\///g;s/\.html$//g' | \
		awk -v PGE="$1" -v ROOT="$WBST/local" '
	BEGIN {
		print "  <nav id=\"HORNAV\" role=\"doc-toc\">"
		print "  <ul>"
		print "  <li id=\"home\"><a href=\"file://" ROOT "\"> HOME </a></li>"
	}
	!/home/ {
		if($0 ~ PGE) {
			print "  <li id=\"select\"><a href=\"file://" ROOT "/pages/" $0 ".html\"> " $0 " </a></li>"
		}
		else {
			print "  <li><a href=\"file://" ROOT "/pages/" $0 ".html\"> " $0 " </a></li>"
		}
	}
	END {print "  </ul>";print "  </nav>";print ""}'
}
genbloghome() {
	cd $WBST
	cd content/posts
cat <<EOB
---
title: Blog Posts
date: Updated $(date)
---

EOB
#	for i in $(find . -maxdepth 1 -type d | sed 's/^\.$//g;s/\.\///g'); do
	for i in $(fd -d 1 -t d); do
		printf "\n%s\n\n" "# $i"
		cd $i
#		for i in $(find . -type f -print0 | sort -z -r | xargs -r0 -I {} echo "{}" | sed 's/\.\///g'); do
		for i in $(fd -t f | sort -r); do
			printf "%s" "* **${i%.*}** - "
			awk -v NAME="${PWD/content\//local\/}/${i%.*}.html" '
				/^title:/{gsub(/^title: /,"",$0);printf "[%s](%s) ",$0,NAME}
				/^time:/{gsub(/^time: /,"",$0);printf "<time>%s</time>\n",$0}' $i
		done
		cd ../
	done
	cd $WBST
}
genfeed()     {
	cd $WBST
cat <<EOB
<?xml version="1.0" encoding="utf-8"?>
<!-- <?xml-stylesheet type="text/css" href="rss.css" ?> -->
<!-- <?xml-stylesheet href="rss.xsl" type="text/xsl" media="screen"?> -->
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
<title>Gavin Vales' Blog</title>
<description>Updates from Gavin Vales</description>
<language>en-us</language>
<link>file:///home/gavarch/git/website/rss.xml</link>
<atom:link href="file:///home/gavarch/git/website/rss.xml" rel="self" type="application/rss+xml" />
<image>
<title>Gavin Vales' Blog</title>
<url>file:///home/gavarch/git/website/resources/about.png</url>
<link>file:///home/gavarch/git/website/rss.xml</link>
</image>

EOB
	cd content/posts
#	for i in $(find . -type f | sed 's/\.\///g'); do
	for i in $(fd -t f); do
		echo ''
		echo '<item>'
		awk '
			/^title:/ {
				gsub(/title: /,"",$0);gsub(/__/,"",$0)
				print "<title>"$0"</title>"
			}
			/^date:/ {gsub(/date: /,"",$0);printf "<pubDate>%s", $0}
			/^time:/ {gsub(/time:/,"",$0);printf "%s</pubDate>\n", $0}
		' $i
		echo '<description><![CDATA['
		sed '/^<\!DOCTYPE html>/,/^<\/header>/{/^<\!DOCTYPE html>/!{/^<\/header>/!d}}' \
			$WBST/local/posts/${i%.*}.html | \
			sed '/<!DOCTYPE html>/d;/<\/header>/d;/<\/body>/d;/<\/html>/d'
		echo ']]></description>'
		echo '</item>'
	done
	echo -e '\n</channel>\n'
	echo -e '</rss>\n'
	cd $WBST
}

O_mkpage()   {
	local SRC TRG FLD TPE
	SRC="$1"
	FLD=${PWD/"${WBST}/content/"/} ; TPE=${FLD%%/*}
	[[ $TPE == "pages" ]] && TRG=${WBST}/pages/${SRC%.*}.html || {
		FLD=${FLD#*/} ; MNTH=${FLD#*/} ; YEAR=${FLD%/*}
		TRG=${WBST}/posts/${YEAR}/${MNTH}/${SRC%.*}.html
	}
	$PNDCMD $TRG $SRC
	exit
}
O_gensite()  {
	cd $WBST
	[[ -d local ]] || mkdir local
	genbloghome > $WBST/content/pages/blog.md
#	find content -type d | \
	fd -t d -p content | \
		sed '/^content$/d;s/content\///g' | \
		xargs -I {} mkdir -p local/{}
#	for i in $(find content -type f | sed 's;content/;local/;g'); do
	for i in $(fd -t f -p content | sed 's;content/;local/;g'); do
		$PNDCMD "${i%.*}"_pre.html "content/${i/local\//}"
		sed -i '/<\!DOCTYPE html>/,/<title>/{/<\!DOCTYPE html>/!{/<title>/!d;};}' "${i%.*}_pre.html"
		sed -i '/<title>/,/<\/head>/{/<title>/!{/<\/head>/!d;};}' "${i%.*}_pre.html"
		sed -i '/<\!DOCTYPE html>/d' "${i%.*}_pre.html"
	done
	cd local
#	for i in $(find pages -type f | sed '/_pre\.html$/!d'); do
	for i in $(fd -t f -p pages | sed '/_pre\.html$/!d'); do
		FLE=${i##*/}
		cat $WBST/resources/header > "${i%_pre*}".html
		cssprint page             >> "${i%_pre*}".html
		jsonprint                 >> "${i%_pre*}".html
		navgen "${FLE%_pre*}"     >> "${i%_pre*}".html
		cat "${i}"                >> "${i%_pre*}".html
	done
#	for i in $(find posts -type f | sed '/_pre\.html$/!d'); do
	for i in $(fd -t f -p posts | sed '/_pre\.html$/!d'); do
		cat $WBST/resources/header > "${i%_pre*}".html
		cssprint post             >> "${i%_pre*}".html
		jsonprint                 >> "${i%_pre*}".html
		navgen "blog"             >> "${i%_pre*}".html
		cat "${i}"                >> "${i%_pre*}".html
	done
#	find pages -type f | sed '/_pre\.html/!d' | xargs rm
#	find posts -type f | sed '/_pre\.html/!d' | xargs rm
	fd -t f -p "pages|posts" | sed '/_pre\.html/!d' | xargs rm
	genfeed > rss.xml
	exit
}
O_pushsite() {
	cd $WBST
	./.webgen
	exit
}
O_newpage()  {
	local TTL="$1"
	NME=$(echo $TTL | tr ' ' '-' | tr -d "\'").md
	cd $WBST/content/pages
cat > ${NME} <<EOB
---
title: $TTL
---

<++>
EOB
	$EDITOR "$NME"
	cd $WBST
	exit
}
O_newpost()  {
	local TTL="$1"
	cd $WBST/content/posts
	FLE="$(date '+%Y/%m/%d.md')"
	[[ -d ${FLE%/*} ]] || mkdir -p ${FLE%/*}
	cd ${FLE%/*}
cat > ${FLE##*/} <<EOB
---
title: $TTL
subtitle: <++>
author: <++>
date: $(date '+%a, %d %b %Y')
time: $(date '+%X %z')
---

<++>
EOB
	$EDITOR "${FLE##*/}"
	cd $WBST
	exit
}

while true; do
	case $1 in
		--gensite  | -g ) O_gensite ;;
		--pushsite | -s ) O_pushsite ;;
#		--mkpage  | -m ) O_mkpage  "${2:-}" ; shift ;;
		--newpage | -n ) O_newpage "${2:-}" ; shift ;;
		--newpost | -p ) O_newpost "${2:-}" ; shift ;;
		--help ) help ;;
		-h ) help | \
			sed -n "/^__/,/^$/p;/# SYNOPSIS/,/#/p" | \
			sed 's/__.* - /\t/;/^#/d;/^$/d;s/```//g'
			exit
			;;
		-- ) shift ; break ;;
		*  ) break         ;;
	esac
	shift
done
