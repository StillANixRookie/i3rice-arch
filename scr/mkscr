#!/usr/bin/env bash

cd $HOME
DIR=$USER_SCR_DIR

help () {
cat << 'EOB'
# NAME

__mkscr__ - make bash script

# SYNOPSIS

```
mkscr [--subdirectory|-s <directory>]
      [--template|-t <file>]
      [--generate-help|-g]
      <name>
mkscr --help|-h
```

# OPTIONS

Last argument is always the `<name>` of the new script

`--subdirectory|-s <directory>`  
Create script in subdirectory `<directory>`

`--generate-help|-g`  
Generate help function

`--template|-t <file>`  
Use `<file>` as template

`--help|-h`  
Print this help

EOB
exit
}

template () {
	cd $DIR
	cp "${TEMP}" "${TRG}"
	vim ${TRG}
}

main () {
	[[ -d $DIR ]] && cd $DIR || {
		mkdir $DIR
		cd $DIR
		}

	[[ -n $SDR ]] && {
		[[ -d $SDR ]] && cd $SDR || {
			mkdir $SDR && cd $SDR
			}
		}

	[[ -f $TRG ]] && vim $TRG || {
		cat > $TRG <<EOB
#!/usr/bin/env bash

# OA: Gavin Vales
# CREATED: $(date)
# source $HOME/.config/user-dirs.dirs

while true; do
	case \$1 in
		--<++> | -<++> ) <++>="\${2:-}" ; shift ;;
		-- ) shift ; break ;;
		*  ) break         ;;
	esac
	shift
done

EOB
		[[ -n $GHP ]] && {
		cat >> $TRG <<EOB
help () {
$(banner $TRG)
	-- <++>

 Usage
 -----
 $TRG --<++>|-<++> ┼ <++>
 $TRG --help|-h    ┼ Print this help
}
EOB
			}
		chmod +x $TRG
		vim $TRG
	}
}

while true; do
	case $1 in
		--subdirectory  | -s ) SDR="${2:-}"  ; shift ;;
		--template      | -t ) TEMP="${2:-}" ; shift ;;
		--generate-help | -g ) GHP=1                 ;;
		--help ) help ;;
		-h     ) help | sed -n "/^__/,/^$/p;/# SYNOPSIS/,/#/p" | sed 's/__.* - /\t/;/^#/d;/^$/d;s/```//g' && exit ;;
		-- ) shift ; break ;;
		*  ) break         ;;
	esac
	shift
done

TRG=${@:-}
[[ -n ${TEMP} ]] && template || main
