.TH THEMER 1 2019\-10\-21 Linux "User Manuals"
.hy
.SH NAME
.PP
\f[B]themer\f[R] - A script to change theme of configs using a theme
file.
Inspired by budlabs\[cq] \f[B]mondo-generator\f[R] from the AUR.
.SH SYNOPSIS
.IP
.nf
\f[C]
themer [--dark|-D]
       [--auto-dark|-t <am_time:pm_time>]
       --change|-c <name>
themer --new|-n <name>
themer --getvar|-v <variable>
themer --list|-l themes|vars|varmenu|default|current
themer [--force|-f] --apply-single|-a <directory>
themer --apply-all|-A
themer --updatelist|-u
themer --help|-h
themer
\f[R]
.fi
.SH DEPENDENCIES
.IP
.nf
\f[C]
rofi xsel
\f[R]
.fi
.SH EXAMPLES
.PP
[[/images/themer-gruvbox.png|gruvbox]] [[/images/themer-i3.png|i3]]
[[/images/themer-nikes.png|nikes]]
[[/images/themer-redrock.png|redrock]]
[[/images/themer-solarized.png|solarized]]
.SH OPTIONS
.PP
Run with no options to create defaults in \f[B]THEMER_DIR\f[R]
.PD 0
.P
.PD
\f[B]$THEMER_DIR\f[R] = \f[B]$HOME/.config/themer\f[R]
.PP
\f[B]--change|-c <theme>\f[R]
.PD 0
.P
.PD
Change current theme to \f[B]<theme>\f[R].
If \f[B]<theme>\f[R] is empty, a rofi list of themes will be displayed.
.PP
\f[B]--apply-single|-a <directory>\f[R]
.PD 0
.P
.PD
Apply current theme to \f[B]<directory>\f[R].
.PP
\f[B]--apply-all|-A\f[R]
.PD 0
.P
.PD
Apply current theme to directories listed in
\f[B]$THEMER_DIR/.dirs\f[R].
.PP
\f[B]--force|-f\f[R]
.PD 0
.P
.PD
Use with \f[B]--apply-(single|all)\f[R] to force apply a theme, since
themes are not automatically generated from `template_' files to speed
up applying the theme
.PP
\f[B]--getvar|-v <variable>\f[R]
.PD 0
.P
.PD
Get \f[B]<variable>\f[R] from current theme.
.PP
\f[B]--new|-n <name>\f[R]
.PD 0
.P
.PD
Create theme \f[B]<name>\f[R].
.PP
\f[B]--list|-l themes|vars|varmenu|default|current\f[R]
.PD 0
.P
.PD
\f[B]themes\f[R] = list themes in \f[B]$THEMER_DIR\f[R]
.PD 0
.P
.PD
\f[B]default\f[R] = list default variables
.PD 0
.P
.PD
\f[B]current\f[R] = list variables specific to current theme name
.PD 0
.P
.PD
\f[B]vars\f[R] = list all variables in the correct syntax
.PD 0
.P
.PD
\f[B]varmenu\f[R] = rofi list of all variables.
Selected item is automatically copied to the clipboard
.PP
\f[B]--updatelist|-u\f[R]
.PD 0
.P
.PD
Update the rofi theme list
.PP
\f[B]--dark|-D\f[R]
.PD 0
.P
.PD
Dark mode (switches fgo and bg0).
.PP
\f[B]--auto-dark|-t <am_time>:<pm_time>\f[R]
.PD 0
.P
.PD
Dark/Light mode based on time of day.
.PD 0
.P
.PD
Uses 24-hr time format
.PD 0
.P
.PD
+ \f[B]<am_time>\f[R] hr to apply `light' mode.
+ \f[B]<pm_time>\f[R] hr to apply `dark' mode.
.PP
\f[B]--help|-h\f[R]
.PD 0
.P
.PD
Display this help.
.SH MAKING THEMES
.SS My Default theme
.IP
.nf
\f[C]
$ themer --list default
name           default
guifont        $romanfont
font           CMUTypewriterText
sansfont       Lucida Sans
monofont       CMU Typewriter Text
romanfont      Luxi Mono
ltimex         1
ltimey         90
size           11
rxvtsize       12
rofifsize      12
gtk            Standard-light
gtk-icon       Tela-red-dark
cursor         Bibata_Dark_Red
conky_loc1     top_left
conky_loc2     bottom_right
acc            #285577
bg0            #CDCBCD
fg0            #302f30
red            #cc241d
ylw            #904800
blu            #004890
grn            #009048
cyn            #009090
gnt            #900048
rng            #d65d0e
\f[R]
.fi
.SS Create New Theme
.PP
Using themer -n will prompt to create the required fg0 [foreground], bg0
[background] and acc [accent] colour variables.
.PP
The rest of the variables will be taken from the
\f[B]$THEMER_DIR/_default\f[R] theme, created automatically, when the
theme is generated.
The \f[B]_default\f[R] theme can be changed as you wish.
.PP
You can also reference variables using a \f[B]$\f[R] in front of the
variable name in the theme file and you can also mix colours.
.IP
.nf
\f[C]
$ cat \[ti]/.config/themer/dosnerd
  name      dosnerd
  bg0       #DFBF9F
  acc       #d5715e
  fg0       #1F1F1F
  blu       $acc
  mix       colmix 33:$bg0 66:$acc
\f[R]
.fi
.SH GENERATING THEMES
.IP
.nf
\f[C]
$ themer --change dosnerd
$ themer --list current
  %%name%%      dosnerd
  %%bg0%%       #DFBF9F
  %%acc%%       #d5715e
  %%fg0%%       #1F1F1F
  %%blu%%       $acc
  %%mix%%       colmix 33:$bg0 66:$acc
\f[R]
.fi
.PP
to change the current theme and generate all variables.
If no theme is specified, you are prompted with the below rofi menu:
.PP
[[/images/thememenu.png|themer \[en]change]]
.PP
including fg0, bg0, and acc variations.
These variations can be seen below.
.PP
Use \f[B]themer --list vars\f[R] or \f[B]themer --list varmenu\f[R] to
see all the variables of the current theme.
\f[B]rofi\f[R] is invoked with \f[B]-normal-window\f[R] flag with the
latter option so you can have this menu open and copy variables
manually:
.PP
[[/images/varmenu.png|themer \[en]list varmenu]]
.PP
Add \f[B]--dark\f[R] or \f[B]--auto-dark <am_time>:<pm_time>\f[R] to
convert to a dark theme (just swaps \f[B]fg0\f[R] and \f[B]bg0\f[R] and
renames the theme to \f[B]<name>-dark\f[R]), or uses light/dark version
based on time of day, respectively.
.SH MAKING THEME TEMPLATE
.PP
For example, an \f[B].Xresources\f[R] theme:
.SS Setup
.IP
.nf
\f[C]
$ cd $HOME
$ themer --init
$ cp .Xresources .themer/template_.Xresources
$ mv .Xresources .Xresources_old        # backup!
$ tree $HOME
  /home/user
  \[u251C]\[u2500]\[u2500] .themer
  \[br]\ \  \[u2514]\[u2500]\[u2500] template_.Xresources
  \[u251C]\[u2500]\[u2500] .Xresources_old
  \[u251C]\[u2500]\[u2500] .themer_pre
  \[u251C]\[u2500]\[u2500] .themer_post
  \[u250A]
\f[R]
.fi
.SS Edit the template
.PP
Here\[cq]s my template_.Xresources
.IP
.nf
\f[C]
$ cat \[ti]/.themer/template_.Xresources
!! vim:ft=xdefaults
#define cwhtl %%fg0%%
#define cwhtd %%acb%%
#define credd %%red%%
#define credl %%red%%
#define cgrnd %%grn%%
#define cgrnl %%grn%%
#define cylwd %%ylw%%
#define cylwl %%ylw%%
#define cblud %%blu%%
#define cblul %%blu%%
#define cgntd %%gnt%%
#define cgntl %%gnt%%
#define ccynd %%cyn%%
#define ccynl %%cyn%%
#define cblkd %%bg0%%
#define cblkl %%bg1%%
#define fontname  %%font%%
#define fontsize  %%rxvtsize%%
#define fontsize2 %%rxvtsize%%

*background:             cblkd
*foreground:             cwhtl
*fading:                 30
*fadeColor:              black
*cursorColor:            credd
*pointerColorBackground: cblkd
*pointerColorForeground: ccynd
*border:                 cblkd
*color0:                 cblkd
*color1:                 credd
*color2:                 cgrnd
*color3:                 cylwd
*color4:                 cblud
*color5:                 cgntd
*color6:                 ccynd
*color7:                 cwhtd
*color8:                 cblkl
*color9:                 credl
*color10:                cgrnl
*color11:                cylwl
*color12:                cblul
*color13:                cgntl
*color14:                ccynl
*color15:                cwhtl
\f[R]
.fi
.PP
The variables from the current theme can be listed using
\f[B]themer --list vars\f[R], and are to be referenced with:
\f[B]%%<variable>%%\f[R].
.PP
Add RGB after a colour name to get its RGB value in \[lq]R, G, B\[rq]
form eg.
\f[B]%%bg0RGB%%\f[R].
.PP
Use \f[B]\[at]\[at]color\[at]\[at]\f[R] instead of \f[B]%%color%%\f[R]
to get hex color without `#'.
Useful for \f[B]#AARRGGBB\f[R] colours.
.SS \f[B].themer_pre\f[R] & \f[B].themer_post\f[R]
.PP
The .themer_pre and .themer_post bash scripts in the
\f[B]<directory>\f[R] are used to do things before/after applying the
theme eg.
reload the .Xresources file (below) etc.
These scripts have the current theme name, eg.
\f[B]dosnerd\f[R], as their first argument.
Obviously, the shebang can be changed.
My \f[B].Xresources\f[R] .themer_post is shown below.
.IP
.nf
\f[C]
#!/usr/bin/env bash
#requires you to use urxvtd & urxvtc
#see budlabs \[dq]Let\[aq]s Linux #021: urxvt reload-config\[dq]
#https://www.youtube.com/watch?v=37jo_x6bXBk

XRS=$HOME/.Xresources

cat \[dq].themer/${1}/.Xresources\[dq] | sed \[dq]s/\[rs]%\[rs]%.*\[rs]%\[rs]%//g\[dq] > $XRS
xrdb -load $XRS
kill -1 $(pidof urxvtd)
\f[R]
.fi
.SH APPLYING THEMES
.SS \f[B]--apply-single\f[R]
.IP
.nf
\f[C]
themer -a $HOME
\f[R]
.fi
.PP
to apply the theme to each template in \f[B]$HOME/.themer\f[R].
.SS \f[B]--apply-all\f[R]
.IP
.nf
\f[C]
themer --apply-all
\f[R]
.fi
.PP
to apply theme to all directories listed in \f[B]$THEMER_DIR/.dirs\f[R]
.SS The result
.PP
Both of the above options will result in the following directory
structure for our dosnerd theme \f[B].Xresources\f[R] example.
Both options will also run the \f[B].themer_pre\f[R] &
\f[B].themer_post\f[R] scripts too.
.IP
.nf
\f[C]
$ cd $HOME
$ tree $HOME
  /home/user
  \[u251C]\[u2500]\[u2500] .themer
  \[br]\ \  \[u251C]\[u2500]\[u2500] dosnerd
  \[br]\ \  \[br]\ \  \[u2514]\[u2500]\[u2500] .Xresources
  \[br]\ \  \[u251C]\[u2500]\[u2500] dosnerd-dark
  \[br]\ \  \[br]\ \  \[u2514]\[u2500]\[u2500] .Xresources
  \[br]\ \  \[u2514]\[u2500]\[u2500] template_.Xresources
  \[u251C]\[u2500]\[u2500] .Xresources_old
  \[u251C]\[u2500]\[u2500] .Xresources               # the new .Xresources!
  \[u251C]\[u2500]\[u2500] .themer_pre
  \[u251C]\[u2500]\[u2500] .themer_post
  \[u250A]
\f[R]
.fi
.SH WALLS
.PP
[[/images/MunnarKeralaIndia.jpg|gruvbox]]
[[/images/PenedodoGuinchoLisbonPortugal.jpg|i3]]
[[/images/JericoacoaraBrazil.jpg|nikes]]
[[/images/ValleyofFireStateParkOvertonNV.jpg|redrock]]
[[/images/WW_128000000001428569_EN.jpg|solarized]]
